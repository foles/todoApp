[{"H:\\projects\\react\\todo-app\\src\\index.js":"1","H:\\projects\\react\\todo-app\\src\\App.js":"2","H:\\projects\\react\\todo-app\\src\\components\\Form.js":"3","H:\\projects\\react\\todo-app\\src\\components\\TodoList.js":"4","H:\\projects\\react\\todo-app\\src\\components\\Todo.js":"5"},{"size":176,"mtime":1612221395889,"results":"6","hashOfConfig":"7"},{"size":1746,"mtime":1612237283692,"results":"8","hashOfConfig":"7"},{"size":1235,"mtime":1612232952025,"results":"9","hashOfConfig":"7"},{"size":438,"mtime":1612233428077,"results":"10","hashOfConfig":"7"},{"size":1072,"mtime":1612236213754,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"10q6si3",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"H:\\projects\\react\\todo-app\\src\\index.js",[],["25","26"],"H:\\projects\\react\\todo-app\\src\\App.js",["27"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n\n\n\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filterTodos, setFilterTodos] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, [])\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilterTodos(todos.filter(todo => todo.isCompleted === true))\n        break;\n      case 'uncompleted':\n        setFilterTodos(todos.filter(todo => todo.isCompleted === false))\n        break;\n      default:\n        setFilterTodos(todos)\n        break;\n    }\n  }\n\n  const saveLocalTodos = () => {\n    localStorage.setItem('todos', JSON.stringify(todos))\n  }\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") !== null) {\n      let todosLocal = JSON.parse(localStorage.getItem('todos'));\n      setTodos(todosLocal);\n    }\n  }\n\n\n  return (\n    <div className=\"Todo\">\n      <div className=\"banner\">\n\n      </div>\n      <div className=\"App\">\n        <header className=\"App__header\">\n          <h1> T O D O </h1>\n          <span className=\"App__header__icon\"></span>\n        </header>\n        <Form\n          todos={todos}\n          setTodos={setTodos}\n          inputText={inputText}\n          setInputText={setInputText}\n          setStatus={setStatus}\n          filterTodos={filterTodos}\n        />\n        <TodoList todos={todos} setTodos={setTodos} filterTodos={filterTodos} />\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","H:\\projects\\react\\todo-app\\src\\components\\Form.js",[],"H:\\projects\\react\\todo-app\\src\\components\\TodoList.js",[],"H:\\projects\\react\\todo-app\\src\\components\\Todo.js",["28"],"import React from 'react';\r\nimport './Todo.css'\r\nimport checkIcon from '../assets/icon-check.svg'\r\nconst Todo = ({ todos, setTodos, todo }) => {\r\n\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter(elem => elem.id !== todo.id))\r\n    }\r\n\r\n    const completeHandler = () => {\r\n        setTodos(\r\n            todos.map(item => {\r\n                if (item.id === todo.id) {\r\n                    return {\r\n                        ...item, isCompleted: true\r\n                    }\r\n                }\r\n                return item\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"App__todo\">\r\n            <div className=\"todo__task\">\r\n                <span onClick={completeHandler} className={`todo__check ${todo.isCompleted ? 'checkCompleted' : null}`}><img src={checkIcon} /></span>\r\n                <li className={`todo__item ${todo.isCompleted ? 'completed' : null}`}>{todo.task}</li>\r\n            </div>\r\n            <span onClick={deleteHandler} className=\"todo__cross\"></span>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;\r\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":22,"column":6,"nodeType":"35","endLine":22,"endColumn":21,"suggestions":"36"},{"ruleId":"37","severity":1,"message":"38","line":25,"column":121,"nodeType":"39","endLine":25,"endColumn":144},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterHandler' and 'saveLocalTodos'. Either include them or remove the dependency array.","ArrayExpression",["42"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"43","fix":"44"},"Update the dependencies array to be: [todos, status, filterHandler, saveLocalTodos]",{"range":"45","text":"46"},[490,505],"[todos, status, filterHandler, saveLocalTodos]"]